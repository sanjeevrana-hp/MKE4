trigger:
  branches:
    include:
      - main  # Runs when code is pushed to `main`

pool:
  vmImage: 'ubuntu-latest'  # Runs on an Ubuntu agent

steps:
  # Step 1: Ensure Repository is Checked Out
  - checkout: self

  # Step 2: Verify Docker is Installed and Running
  - script: |
      docker --version
      docker info
    displayName: "Verify Docker Installation"

  # Step 3: Debug Environment Variables (if using Azure DevOps variables)
  - script: |
      env
    displayName: "Debug Environment Variables"

  # Step 4: Build Docker Image
  - script: |
      set -x  # Enable debug mode
      docker run -d --name my-mke-container sanjeevranahp/mke4:latest
    displayName: "Build Docker Image"

  # Step 5: Push Docker Image to Docker Hub
  - script: |
      docker push sanjeevranahp/mke4:latest
    displayName: "Push Image to Docker Hub"

  # Step 6: Run Docker Container
  - script: |
      docker images
      docker run -d -it --name my-mke-container sanjeevranahp/mke4:latest
    displayName: "Run Docker Container"

  # Step 7: Run Terraform Apply inside the Container
  - script: |
      docker exec my-mke-container /bin/bash -c "
        cd /MKE4/mke-docs/content/docs/tutorials/k0s-in-aws/terraform && \
        t deploy lab \
        terraform output -json | jq -r '.lb_dns_name.value' > /MKE4/lb_dns_name.txt
      "
    displayName: "Terraform Apply & Extract LB DNS Inside Container"

  # Step 8: Copy Load Balancer DNS Output from Container
  - script: |
      docker cp my-mke-container:/MKE4/lb_dns_name.txt $(Build.ArtifactStagingDirectory)/lb_dns_name.txt || echo "LB DNS output not found"
    displayName: "Copy Load Balancer DNS from Container"

  # Step 9: Copy kubeconfig from Container
  - script: |
      docker cp my-mke-container:/root/.mke/mke.kubeconf $(Build.ArtifactStagingDirectory)/mke.kubeconf || echo "Kubeconfig not found"
    displayName: "Copy kubeconfig from Container"

  # Step 10: Publish Artifacts (kubeconfig & lb_dns_name)
  - task: PublishBuildArtifacts@1
    displayName: "Publish kubeconfig & LB DNS Output"
    inputs:
      pathToPublish: "$(Build.ArtifactStagingDirectory)"
      artifactName: "deployment_outputs"
